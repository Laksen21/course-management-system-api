package lk.cms.course_management_system.util;

import lk.cms.course_management_system.entity.User;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;
import org.springframework.stereotype.Component;

import javax.crypto.SecretKey;
import java.security.Key;
import java.util.Date;

@Component
public class JwtAuthenticator {

    // generate JWT token
    public String generateJwtToken(User user) {
        int jwtExpirationMs = 36000000;
        return Jwts.builder()
                .subject((user.getUsername()))
                .issuedAt(new Date())
                .expiration(new Date((new Date()).getTime() + jwtExpirationMs))
                .signWith(key(), SignatureAlgorithm.HS256)
                .compact();
    }

    // generate secret key
    public SecretKey generateSecretKey() {
        return Jwts.SIG.HS256.key().build();
    }

    private final String jwtSecret = "9OlzvEV3LYlcbyNAGS02ejMbrym2FJ0398Ga4/8xkNY=";

    // give the actual secret key
    private Key key() {
        return Keys.hmacShaKeyFor(Decoders.BASE64.decode(jwtSecret));
        //return Keys.hmacShaKeyFor(generateSecretKey().getEncoded());
    }

    // validate token ---> verify the token is generated by us
    public boolean validateJwtToken(String authToken) {
        String jwtToken = authToken.substring("Bearer ".length());
        try {
            Jwts.parser().setSigningKey(key()).build().parse(jwtToken);
            return true;
        } catch (Exception e) {
            System.out.println("Error validating token: " + e.getMessage());
        }
        return false;
    }
}
